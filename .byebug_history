continue
audit_log.confirmed!
continue
contunue
continue
audit_log.try(audit_log.confirmed!)
audit_log.confirmed
audit_log = AuditLog.where(user_id: self.user_id, start_date: (self.date - 7.days..self.date)).last
AuditLog.where(user_id: self.user_id, start_date: (self.date - 7.days..self.date))
AuditLog.where(user_id: self.user_id, start_date: (self.date - 7.days..self.date)).last
AuditLog.where(user_id: self.user_id, start_date: (self.date - 7.days..self.date))
AuditLog.first.id
AuditLog.first
AuditLog.where
audit_log
exit
audit_log
exit
AuditLog.all.first
AuditLog.all
audit_log
continue
exit
AuditLog.first
AuditLog.all()
AuditLog.all
AuditLog
AuditLog.where(user_id: self.user_id, start_date: (self.date - 7.days..self.date))
self.user_id
audit_log
continue
exit
@audit_logs[0].user.full_name
@audit_logs[0].user
exit
@audit_logs.length
exit
User.first
exit
User.create(email: 'test@yahoo.com', 
                    password: '123123', 
                    password_confirmation: '123123', 
                    first_name: 'Kevin', 
                    last_name: 'Montesclaros',
                    phone: '1111111111')
User.first
User
User.first
@user.id
@user
continue
next
non_authorized_user
continue
post_from_other_user
post2
post1
continue
current_user[:type]
current_user
exit
currentexit
current_user.try[:email]
current_user
current_user[:type]
current_user[:type2]
current_user
current_user.try[:type]
current_user.try[:first_name]
current_user.try
current_user[:type2]
current_user[:type]
current_user
exit
@user
c
